buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.2.9")
    }
}

plugins {
    id 'application'
    id 'uk.gov.hmcts.java' version '0.12.0'
    id 'pmd'
    id 'jacoco'
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'com.github.spacialcircumstances.gradle-cucumber-reporting' version '0.1.22'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'org.owasp.dependencycheck' version '6.0.3'
    id 'com.github.ben-manes.versions' version '0.36.0'
    id 'org.sonarqube' version '3.0'
}

apply plugin: 'java'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: 'project-report'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'


def versions = [
        junit          : '5.5.0',
        lombok         : '1.18.6',
        reformLogging  : '5.1.1',
        reformS2sClient: '3.1.1',
        serenity       : '2.1.0',
        springBoot     : '2.4.2',
        swagger2Version: '3.0.0-SNAPSHOT',
        rest_assured   : '3.3.0',
        cucumber       : '5.7.0',
        feign_jackson  : '9.7.0'
]

mainClassName = 'uk.gov.hmcts.reform.orgrolemapping.AmRoleAssignmentEndToEnd'
def jarName = 'am-role-assignment-e2e-tests.jar'

pmd {
    toolVersion = '6.21.0'
    sourceSets = []
}

group = 'uk.gov.hmcts.reform.roleassignmente2e'
version = '0.0.1'

allprojects {
    sourceCompatibility = '11'
    targetCompatibility = '11'
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.0
            }
        }
    }
}

configurations {
    functionalTestCompile.extendsFrom testCompile
    functionalTestRuntime.extendsFrom testRuntime
    cucumberRuntime.extendsFrom(functionalRuntime)
}

sourceSets {
    functionalTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/functionalTest/java')
        }
        resources.srcDir file('src/functionalTest/resources')
    }


    smokeTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/smokeTest/java')
        }
        resources.srcDir file('src/smokeTest/resources')
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

task functional(type: Test, description: 'Runs the functional tests.', group: 'Verification') {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    doFirst {
        generateCucumberReports.enabled = true
        javaexec {
            main = "uk.gov.hmcts.reform.orgrolemapping.befta.OrgRoleMappingAmBeftaMain"
            classpath += configurations.cucumberRuntime + sourceSets.functionalTest.runtimeClasspath + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', "json:${projectDir}/target/cucumber.json", '--tags', 'not @Ignore', '--glue',
                    'uk.gov.hmcts.befta.player', 'src/functionalTest/resources/features/']
        }
    }
}


task smoke(type: Test, description: 'Runs the smoke tests.', group: 'Verification') {
    testClassesDirs = sourceSets.smokeTest.output.classesDirs
    classpath = sourceSets.smokeTest.runtimeClasspath
    finalizedBy aggregate
}

jacocoTestReport {
    executionData(test)
    reports {
        xml.enabled = true
        csv.enabled = false
        xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport

jacoco {
    toolVersion = "0.8.5"
}

sonarqube {
    properties {
        property "sonar.projectName", "am-role-assignment-e2e-tests"
        property "sonar.projectKey", "am-role-assignment-e2e-tests"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.exclusions", "src/main/java/**"
        property "sonar.junit.reportPaths", "${project.buildDir}/test-results/junit-platform"
    }
}

project.tasks['sonarqube'].dependsOn test, jacocoTestReport
project.tasks['sonarqube'].group = "Verification"

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all {
            def isNonStable = { String version ->
                ['alpha', 'beta', 'rc', 'cr', 'm', 'preview', 'b', 'ea'].any { qualifier ->
                    version ==~ /(?i).*[.-]$qualifier[.\d-+]*/
                }
            }
            if (isNonStable(candidate.version) && !isNonStable(currentVersion)) {
                selection.reject('Release candidate')
            }
        }
    }
}

//https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    suppressionFile = 'config/owasp/suppressions.xml'
}

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven {
        url "https://dl.bintray.com/hmcts/hmcts-maven"
    }
    maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
}


dependencies {
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBoot) {
    }
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: versions.springBoot) {

    }

    compile(group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version: '0.1.0') {

    }

    compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    compile group: 'org.json', name: 'json', version: '20200518'


    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    //compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.3.72'
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-common', version: '1.3.72'

    // drools engine dependency

    //Added for Spring Security Implementation


    //Added for S2S and User Authentication
    compile group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: versions.reformS2sClient
    compile(group: 'uk.gov.hmcts.reform.auth', name: 'auth-checker-lib', version: '2.1.4') {
        // TODO remove when auth-checker-lib upgrades its dependency to spring boot 2.0.x
        exclude group: 'uk.gov.hmcts.reform', module: 'java-logging-spring'
    }
    compile group: 'javax.inject', name: 'javax.inject', version: '1'
    compile group: 'io.springfox', name: 'springfox-swagger2', version: versions.swagger2Version
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.swagger2Version
    compile group: 'io.springfox', name: 'springfox-spring-webmvc', version: versions.swagger2Version

    compile group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformLogging
    compile group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.reformLogging
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: '2.2.5.RELEASE'

    //Azure service bus libraries
    compile group: 'com.microsoft.azure', name: 'azure', version: '1.37.0'
    compile group: 'com.microsoft.azure', name: 'azure-servicebus', version: '3.4.0'
    compile group: 'io.projectreactor', name: 'reactor-core', version: '3.4.0'
    compile group: 'com.azure', name: 'azure-core', version: '1.10.0'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'


    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-websocket', version: '9.0.40'
    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '9.0.40'

    compile group: 'org.springframework.hateoas', name: 'spring-hateoas', version: '1.2.2'
    compile group: 'org.springframework', name: 'spring-tx', version: '5.2.9.RELEASE'

    compile(group: 'org.springframework', name: 'spring-jms', version: '5.2.9.RELEASE')
    compile(group: 'org.springframework', name: 'spring-beans', version: '5.2.9.RELEASE')
    compile(group: 'org.springframework', name: 'spring-context', version: '5.2.9.RELEASE')
    compile(group: 'org.springframework', name: 'spring-core', version: '5.2.9.RELEASE')
    compile(group: 'org.springframework', name: 'spring-test', version: '5.2.9.RELEASE')
    compile(group: 'org.springframework', name: 'spring-tx', version: '5.2.9.RELEASE')
    compile(group: 'org.springframework', name: 'spring-aspects', version: '5.2.9.RELEASE')
    compile group: 'org.springframework.retry', name: 'spring-retry', version: '1.3.0'
    compile group: 'org.amqphub.spring', name: 'amqp-10-jms-spring-boot-starter', version: '2.3.5'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation "org.springframework.security:spring-security-web"
    implementation "org.springframework.security:spring-security-config"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"

    testCompile('com.github.tomakehurst:wiremock-jre8:2.25.1')
    testCompile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot) {
        exclude group: 'junit', module: 'junit'
    }
    testCompile group: 'uk.gov.hmcts', name: 'befta-fw', version: '6.5.2'
    //compile fileTree(dir: 'lib', include: 'befta-fw-5.11.0.jar')
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '2.2.5.RELEASE'

    testCompile(group: 'io.cucumber', name: 'cucumber-java', version: versions.cucumber) {
        exclude group: 'javascript', module: 'jquery'
    }
    testCompile group: 'io.rest-assured', name: 'rest-assured', version: versions.rest_assured
    testCompile group: 'io.cucumber', name: 'cucumber-junit', version: versions.cucumber
    testCompile group: 'io.github.openfeign', name: 'feign-jackson', version: versions.feign_jackson

    testCompile group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    testCompile group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    testCompile group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    testCompile group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity

    smokeTestCompile group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    smokeTestCompile group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    smokeTestCompile group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    smokeTestCompile group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    smokeTestCompile group: 'io.rest-assured', name: 'rest-assured', version: versions.rest_assured
    smokeTestCompile group: 'commons-io', name: 'commons-io', version: '2.8.0'
    // AM-467-Serenity report for Integration test

    functionalTestCompile sourceSets.main.runtimeClasspath
    functionalTestCompile sourceSets.test.runtimeClasspath

    compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    smokeTestCompile sourceSets.main.runtimeClasspath
    smokeTestCompile sourceSets.test.runtimeClasspath
    smokeTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    smokeTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

}

def getCheckedOutGitCommitHash() {
    'git rev-parse --verify --short HEAD'.execute().text.trim()
}


test {
    generateCucumberReports.enabled = false
    useJUnitPlatform()
    failFast = true
}

bootJar {
    archiveName = jarName

    manifest {
        attributes('Implementation-Version': project.version.toString())
    }
}

configurations {
    runtime.exclude group: "com.thoughtworks.xstream", module: "xstream"
}

cucumberReports {
    outputDir = file("${projectDir}/target/cucumber")
    reports = files("${projectDir}/target/cucumber.json")
    notFailingStatuses = ["skipped","passed"]
}
